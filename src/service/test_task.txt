Дается скрипт, написанный, на питоне, который представляет собой HTTP-микросервис.

Состоит из файла superservice.py. Инструкции по установке и запуску см. в файле install.txt

При запуске команды python superservice.py migrate он создает все необходимое для его работы (базу sqlite c именем main.db в текущей директории).
При запуске команды python superservice run скрипт начинает раздавать HTTP api на локальном адресе и порте 5000.

Эндпоинты сервиса:
  - /ping/ - принимает GET, выдает всегда HTTP 200, 'OK'
  - /authorize/ - принимает POST, параметры username / password. Выдает json {'token': ТОКЕН АВТОРИЗАЦИИ} при успехе. Токен валиден 1 минуту.
  - /api/save_data/ - принимает POST, принимает параметр payload, требует авторизации.
      В зависимости от content-type запроса принимает json или x-www-form-urlencoded.
      Возвращает json с полями 1) status: OK или ERROR, 2) в случае ошибки error с подробностями ошибки 3) в случае отсутствия ошибки id с каким-то уникальным идентификатором
      При вызове метода данные payload хэшируются md5 и сохраняются в таблицу uploads (id / user_id/ payload_md5)

Авторизация:
Для доступа к апи требуется указать токен авторизации в заголовке следующим образом:
    Authorization: Bearer <токен>


Для тестирования заведен пользователь user=supertest с паролем superpassword
Напишите скрипт для автоматического тестирования сервиса. Можно использовать готовые фреймворки. Скрипт должен возвращать нулевой код ошибки в случае отсутствия тестов, и ненулевой в случае непрохождения тестов. В случае если тест не пройдет, в файле error.txt должна содержаться детализация, что пошло не так.
